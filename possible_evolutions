#! /usr/bin/env python3


"""
COMP3311
23T1
Assignment 2
Pokemon Database

Written by: <YOUR NAME HERE> <YOUR STUDENT ID HERE>
Written on: <DATE HERE>

Possible Evolutions

Given the name of a pokemon,
display a list of all the pokemon that could evolve into the given pokemon,
and a list of all the pokemon that the given pokemon could evolve into.
"""


import sys
import psycopg2
import helpers


### Constants
USAGE = f"Usage: {sys.argv[0]} <Pokemon Name>"


### Globals
db = None
Pokemon_Name = None


### Command-line args
if len(sys.argv) != 2:
    print(USAGE, file=sys.stderr)
    sys.exit(1)
Pokemon_Name = helpers.clean(sys.argv[1])


def main():
    with db.cursor() as cur:

        # take name of pokemon
        pre_ev_query = """
        SELECT *
        FROM Pokemon AS po
        INNER JOIN (
            SELECT e.post_evolution
            FROM Evolutions AS e
            INNER JOIN (
                SELECT id FROM Pokemon WHERE name = %s
            ) AS p ON p.id = e.pre_evolution
        ) AS pe ON pe.post_evolution = po.id;
        """
        cur.execute(pre_ev_query, (Pokemon_Name, ))
        print(cur.fetchall())

        post_ev_query = """
        SELECT *
        FROM Pokemon AS po
        INNER JOIN (
            SELECT e.pre_evolution
            FROM Evolutions AS e
            INNER JOIN (
                SELECT id FROM Pokemon WHERE name = %s
            ) AS p ON p.id = e.post_evolution
        ) AS pe ON pe.pre_evolution = po.id;
        """
        cur.execute(post_ev_query, (Pokemon_Name, ))
        print(cur.fetchall())

    # print pre evolutions and evolutions
    # requirements for evolutions to occur
    # order pokemon by id (pokedex number then variation number)
    # order requirements by evolutions id then evolution_requirements.inverted then requirements.id
    ...


if __name__ == '__main__':
    try:
        db = psycopg2.connect(dbname="ass2")
        main()
    except psycopg2.Error as err:
        print("DB error: ", err)
    except Exception as err:
        print("Internal Error: ", err)
        raise err
    finally:
        if db is not None:
            db.close()
    sys.exit(0)
